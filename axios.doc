Traditional way or first legacy way of making api calls are:-
const xhr = new XMLHttpRequest();

this is deprecated now, but we can use it it has more manual works for us;


//fetch comes in 2017 and it is write from ground,not depend over xhr;
It is browser feature;

⭐in fetch it return promise, or ham fir usko json method call krke data lete hai, but ye sirf kind of object or array data ke liye hm .json krte hai agar backend se response text form me aata hai to hm .text methods ko call krege or agar data images/binary form me hai to hm .blob method call krege to get Data;

Most Important thing about fetch is:-
⭐⭐⭐=> WE CAN STREAM DATA, MEANS JUST LOOK AT ANY CHAT-GPT, DEEPSEEK ETC.THEY ARE NOT GIVE RESPONSE AT ONCE INFACT THEY GIVE RESPONSE LINE-BY-LINE WHICH IS CALLED DATA-STREAMING, WHICH IS NOT POSSIBLE WITH XHR & AXIOS OK ONLY POSSIBLE WITH fetch();



DIFFERENCE B/W AXIOS & FETCH ERROR handling IS:-

FETCH KA .catch() SIRF TAB CHALTA HAI JAB REQUEST SERVER TAK NA PAUCHI HO,YE BEKAR CHIJ HAI,ISME HME DATA NHI ANE PAR ERROR KE LIYE .THEN() BLOCK ME HI IF(RESPONSE.OK){
    RETURN DATA;
} ELSE {
    THROW NEW ERROR("SOMETHING WRONG...")
}).CATHC(ERR){
    CONSOLE.ERROR(ERR)
}

YE SAB KRNA PDTA HAI BUT AXIOS ME .CATCH NORMALY WORK KRTA HAI VO ADVANTAGE HAI;




AXIOS IS BASED ON XHR/XMLHttpRequest;✅

Axiox is better than fetch due to following reasons:-(Basics)

1. easy and cleaner syntax,
2. better error handling,
3. mainly automatically convert data to json,

//normal mode
async ()=>{
    try{
        const res = await fetch("www.api.com");
        const data = await res.json(res);
        console.log(data);
    } catch(error) {
        console.log(error)
    }
};


// in axios
async ()=>{
    try{
        const res = await axios.get("Our.api.com");
        // automatically convert to json
        console.log(data);
    } catch(error) {
        console.log(error.message)
        console.log(error.response.status)
        console.log(error.response.data)
    }
};


//professional way;

import axios from "axios";

const baseUrl = 'https://youtube.com'

const api = axios.create({
    baseUrl,
    credentials:true // for send/recieve cookie with each request;
});

=>now make your functions here like
export const getData = ()=>{
    // we are just return the method from here;
    return api.get("/vidios");
};

getData(); and you are good to go;


//features:->>

1). in fetch we have use AbortController to cancel request but in axios we have built in cancelToken() thing;

2). in fetch to give error after certain time like 5 seconds if no data is comes so we have created a timers manually but in axios we have {timeout:5000} thing so after 5 seconds automatically .catch() block runs;

3). query params ke case me bhi fetch me URLSearchParams karke phle hme hamari value ko Encode/Decode krna hota hai but axios ke case me hme ni krna pdta...



//For Making an Api like mock and other things we have axios-mock-adapter package. code in school-dashboard project...


//September me jayada code push nahi kiya hai kyuki bhaut kuch chije sath me hui or ab me toot gya hua and chijo ko dubara seekhunga loho pe bharosha itni jalti nahi krna hai